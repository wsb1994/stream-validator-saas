create table profiles (
  id uuid references auth.users not null,
  updated_at timestamp with time zone,
  username text unique,
  avatar_url text,
  website text,

  primary key (id),
  unique(username),
  constraint username_length check (char_length(username) >= 3)
);

alter table profiles enable row level security;

create policy "Public profiles are viewable by the owner."
  on profiles for select
  using ( auth.uid() = id );

create policy "Users can insert their own profile."
  on profiles for insert
  with check ( auth.uid() = id );

create policy "Users can update own profile."
  on profiles for update
  using ( auth.uid() = id );

-- Set up Realtime
begin;
  drop publication if exists supabase_realtime;
  create publication supabase_realtime;
commit;
alter publication supabase_realtime add table profiles;

-- Set up Storage
insert into storage.buckets (id, name)
values ('avatars', 'avatars');

create policy "Avatar images are publicly accessible."
  on storage.objects for select
  using ( bucket_id = 'avatars' );

create policy "Anyone can upload an avatar."
  on storage.objects for insert
  with check ( bucket_id = 'avatars' );

create policy "Anyone can update an avatar."
  on storage.objects for update
  with check ( bucket_id = 'avatars' );

create table public.streams (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  name text not null,
  url text not null,
  is_enabled boolean not null default true,
  constraint streams_pkey primary key (id),
  tag text
) TABLESPACE pg_default;


INSERT INTO public.streams
("id", "created_at", "name", "url", "is_enabled", "tag") 
VALUES 
  ('1', '2025-03-30 21:19:44.426397+00', 'Big Buck Bunny', 'https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8', 'true', 'default'),
  ('2', '2025-03-30 21:19:59.903061+00', 'Alternate Big Buck Bunny 480p', 'https://test-streams.mux.dev/x36xhzz/url_6/193039199_mp4_h264_aac_hq_7.m3u8', 'true', 'default'),
  ('3', '2025-03-30 21:20:18.525187+00', 'ARTE China', 'https://test-streams.mux.dev/test_001/stream.m3u8', 'true', 'default'),
  ('4', '2025-03-30 21:20:31.224362+00', 'Weird Video', 'https://test-streams.mux.dev/issue666/playlists/cisq0gim60007xzvi505emlxx.m3u8', 'true', 'default'),
  ('5', '2025-03-30 21:22:02.612843+00', 'Advertisement Included', 'https://test-streams.mux.dev/dai-discontinuity-deltatre/manifest.m3u8', 'true', 'default'),
  ('6', '2025-03-30 21:22:28.324526+00', 'Turntable', 'https://test-streams.mux.dev/pts_shift/master.m3u8', 'true', 'default'),
  ('7', '2025-03-30 21:22:38.143845+00', 'Tears of Steel', 'https://test-streams.mux.dev/tos_ismc/main.m3u8', 'true', 'default');
